#pragma once

#define NAME "@project_name@"

#define VERSION_MAJOR @version_major@
#define VERSION_MINOR @version_minor@
#define VERSION_PATCH @version_patch@
#define DEFAULT_LOG_FILE "@default_log_file@"

#define CONFIG_ADDRESS  "address"
#define CONFIG_PORT     "port"
#define CONFIG_WORKER   "worker"
#define CONFIG_BACKLOG  "backlog"
#define CONFIG_LOG_FILE "log_file"
#define CONFIG_WWW_ROOT "www_root"

#include "map.h"
#include "array.h"

typedef struct {
    // store all configurations but 'route' as KV pairs
    map_t *props;

    // store all route as an arry, which will be used to build a radix tree
    array_t *routes;
} config_t;

extern config_t *config;

config_t *config_init(const char *filename);

int config_get_int(const char *key);

#define config_get(key) map_get_c((config)->props, (key))
